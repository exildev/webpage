#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
Django settings for webpage project.

Generated by 'django-admin startproject' using Django 1.10.1.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '$6tgkn!ug50hss(7z(vix!7&!r9rhz&mb*s2)e$(d2vtfxk9sg'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'suit',
    'markdownx',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'exile'
]

# Django Suit configuration example
SUIT_CONFIG = {
    # header
    'ADMIN_NAME': 'Exile page',
    'HEADER_DATE_FORMAT': 'l, j. F Y',
    'HEADER_TIME_FORMAT': 'H:i',

    # forms
    'SHOW_REQUIRED_ASTERISK': True,  # Default True
    'CONFIRM_UNSAVED_CHANGES': True,  # Default True

    # menu
    # 'SEARCH_URL': '/admin/auth/user/',
    'MENU_ICONS': {
        'auth': 'icon-lock',
        'exile': 'icon-fire'
    },
    # 'MENU_OPEN_FIRST_CHILD': True, # Default True
    # 'MENU_EXCLUDE': ('auth.group',),
    'MENU': (
        'sites',
        {'app': 'auth', 'icon': 'icon-lock', 'models': ('user', 'group')},
        {'app': 'exile', 'models': (
            'page', 'seccion', 'item', 'subitem', 'menu')},
        {'label': 'Configuracion', 'icon': 'icon-cog',
         'models': ('exile.itemseccion',)},
        {'label': 'Principal', 'icon': 'icon-star',
         'models': ('exile.menuprincipal', 'exile.paginaprincipal')},
    ),

    # misc
    'LIST_PER_PAGE': 15
}


# Markdownify
# Default function that compiles markdown using defined extensions. Using
# custom function can allow you to pre-process or post-process markdown
# text. See below for more info.
MARKDOWNX_MARKDOWNIFY_FUNCTION = 'markdownx.utils.markdownify'

# Markdown extensions
# List of used markdown extensions. See below for more info.
MARKDOWNX_MARKDOWN_EXTENSIONS = []
# Configuration object for used markdown extensions
MARKDOWNX_MARKDOWN_EXTENSION_CONFIGS = {}

# Markdown urls
# URL that returns compiled markdown text.
MARKDOWNX_URLS_PATH = '/markdownx/markdownify/'
# URL that accepts file uploads, returns markdown notation of the image.
MARKDOWNX_UPLOAD_URLS_PATH = '/markdownx/upload/'

# Media path
# Path, where images will be stored in MEDIA_ROOT folder
MARKDOWNX_MEDIA_PATH = 'markdownx/'

# Image
MARKDOWNX_UPLOAD_MAX_SIZE = 52428800  # 50MB - maximum file size
# Acceptable file content types
MARKDOWNX_UPLOAD_CONTENT_TYPES = ['image/jpeg', 'image/png']
# Different options describing final image processing: size, compression
# etc. See below for more info.
MARKDOWNX_IMAGE_MAX_SIZE = {'size': (500, 500), 'quality': 90, }

# Editor
# Update editor's height to inner content height while typing
MARKDOWNX_EDITOR_RESIZABLE = True

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'webpage.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'webpage.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'webpage',
        'USER': 'postgres',
        'PASSWORD': 'Exile*74522547',
        'HOST': '104.236.33.228',
        'POST': '5432'
    }
}

# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'es-CO'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
